{"version":3,"file":"static/js/247.d11e4f59.chunk.js","mappings":"4JAoDA,UA/Ca,WACX,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OArBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAEJ,IAAMC,EAAiBD,EAAOE,KAAKC,KACjC,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAChC,MAAO,CACLC,MAAM,kCAAD,OAAoCJ,GACzCC,KAAAA,EACAC,UAAAA,EACAC,GAAAA,EAEH,IAEHb,EAAeO,EAChB,IACAQ,OAAM,WACLC,QAAQC,IAAI,cACb,GACJ,GAAE,CAAChB,IAEuB,IAAvBF,EAAYmB,QACP,uDAGP,+BACE,wBACGnB,EAAYU,KAAI,YAAqC,IAAlCK,EAAiC,EAAjCA,MAAOH,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,2BACE,gBAAKM,IAAKL,EAAOM,IAAG,UAAKT,EAAL,aAAsBU,MAAM,SAChD,uBAAIV,KACJ,uCAAeC,OAHRC,EAMZ,OAIR,C,+LC7CKS,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,4FACY,sBADZ,SAGGC,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAJQ,sBAKbM,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHhB,QAAQC,IAAR,MAfG,gFAmBA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BpB,GAA5B,kFACCqB,EADD,iBACsBrB,GADtB,SAGGY,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHhB,QAAQC,IAAR,MAfG,gFAmBA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA+BS,GAA/B,kFACCqB,EADD,iBACsBrB,EADtB,qBAGGY,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHhB,QAAQC,IAAR,MAfG,gFAmBA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,kFACCqB,EADD,iBACsBrB,EADtB,qBAGGY,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHhB,QAAQC,IAAR,MAfG,gFAmBA,SAAemB,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,wGAGGZ,EAAS,CACbC,OAAQ,MACRC,IAAKL,EALJ,gBAMDM,OAAQ,CACNC,QAASN,EACTc,MAAAA,IARD,UAWoBP,EAAAA,EAAAA,GAAML,GAX1B,cAWGM,EAXH,yBAcIA,EAASC,MAdb,gCAgBHhB,QAAQC,IAAR,MAhBG,gF","sources":["components/Cast/Cast.jsx","services/tmdb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from '../../services/tmdb-api';\n\nconst Cast = () => {\n  const [castResults, setCastResults] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(result => {\n        // console.log(result.cast);\n        const updatedResults = result.cast.map(\n          ({ profile_path, name, character, id }) => {\n            return {\n              photo: `https://image.tmdb.org/t/p/w500${profile_path}`,\n              name,\n              character,\n              id,\n            };\n          }\n        );\n        setCastResults(updatedResults);\n      })\n      .catch(() => {\n        console.log('Fetch error');\n      });\n  }, [movieId]);\n  //   console.log(castResults);\n  if (castResults.length === 0) {\n    return <div>Sorry, no cast avaliable</div>;\n  }\n  return (\n    <>\n      <ul>\n        {castResults.map(({ photo, name, character, id }) => {\n          return (\n            <li key={id}>\n              <img src={photo} alt={`${name} portrait`} width=\"100\" />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nCast.propTypes = {\n  castResults: PropTypes.arrayOf(PropTypes.shape({})),\n  movieId: PropTypes.string,\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\nexport async function getTrendingMovie() {\n  const endpoint = '/trending/movie/day';\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const endpoint = `/movie/${id}`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  const endpoint = `/movie/${id}/credits`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const endpoint = `/movie/${id}/reviews`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const endpoint = `/search/movie`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\n// export default async function getImgs(inputData, page) {\n//   try {\n//     const config = {\n//       method: 'GET',\n//       url: BASE_URL,\n//       params: {\n//         key: API_KEY,\n//         q: inputData,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: 'true',\n//         page: page,\n//         per_page: 12,\n//       },\n//     };\n//     const response = await axios(config);\n//     // console.log(response.data);\n//     // console.log(response.data.totalHits);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n"],"names":["useState","castResults","setCastResults","movieId","useParams","useEffect","getMovieCredits","then","result","updatedResults","cast","map","profile_path","name","character","id","photo","catch","console","log","length","src","alt","width","BASE_URL","API_KEY","getTrendingMovie","config","method","url","params","api_key","axios","response","data","getMovieById","endpoint","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}