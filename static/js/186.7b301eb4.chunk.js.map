{"version":3,"file":"static/js/186.7b301eb4.chunk.js","mappings":"4JAuCA,UAlCgB,WACd,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAkBM,EAAOC,QAC1B,IACAC,OAAM,WACLC,QAAQC,IAAI,cACb,GACJ,GAAE,CAACT,IACJQ,QAAQC,IAAIX,GACkB,IAA1BA,EAAeY,QACV,wEAGP,wBACGZ,EAAea,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACtC,OACE,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAKZ,KAGN,C,+LChCKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,4FACY,sBADZ,SAGGC,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAJQ,sBAKbM,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHjB,QAAQC,IAAR,MAfG,gFAmBA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,kFACCa,EADD,iBACsBb,GADtB,SAGGI,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHjB,QAAQC,IAAR,MAfG,gFAmBA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,kFACCa,EADD,iBACsBb,EADtB,qBAGGI,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHjB,QAAQC,IAAR,MAfG,gFAmBA,SAAeN,EAAtB,+CAAO,OAAP,oBAAO,WAA+BW,GAA/B,kFACCa,EADD,iBACsBb,EADtB,qBAGGI,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHjB,QAAQC,IAAR,MAfG,gFAmBA,SAAeoB,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,wGAGGZ,EAAS,CACbC,OAAQ,MACRC,IAAKL,EALJ,gBAMDM,OAAQ,CACNC,QAASN,EACTc,MAAAA,IARD,UAWoBP,EAAAA,EAAAA,GAAML,GAX1B,cAWGM,EAXH,yBAcIA,EAASC,MAdb,gCAgBHjB,QAAQC,IAAR,MAhBG,gF","sources":["components/Reviews/Reviews.jsx","services/tmdb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../services/tmdb-api';\n\nconst Reviews = () => {\n  const [reviewsResults, setReviewsResults] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(result => {\n        setReviewsResults(result.results);\n      })\n      .catch(() => {\n        console.log('Fetch error');\n      });\n  }, [movieId]);\n  console.log(reviewsResults);\n  if (reviewsResults.length === 0) {\n    return <div>We don`t have any reviews for this movie.</div>;\n  }\n  return (\n    <ul>\n      {reviewsResults.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nReviews.propTypes = {\n  reviewsResults: PropTypes.arrayOf(PropTypes.shape({})),\n  movieId: PropTypes.string,\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\nexport async function getTrendingMovie() {\n  const endpoint = '/trending/movie/day';\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const endpoint = `/movie/${id}`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  const endpoint = `/movie/${id}/credits`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const endpoint = `/movie/${id}/reviews`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const endpoint = `/search/movie`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\n// export default async function getImgs(inputData, page) {\n//   try {\n//     const config = {\n//       method: 'GET',\n//       url: BASE_URL,\n//       params: {\n//         key: API_KEY,\n//         q: inputData,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: 'true',\n//         page: page,\n//         per_page: 12,\n//       },\n//     };\n//     const response = await axios(config);\n//     // console.log(response.data);\n//     // console.log(response.data.totalHits);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n"],"names":["useState","reviewsResults","setReviewsResults","movieId","useParams","useEffect","getMovieReviews","then","result","results","catch","console","log","length","map","author","content","id","BASE_URL","API_KEY","getTrendingMovie","config","method","url","params","api_key","axios","response","data","getMovieById","endpoint","getMovieCredits","getMovieByQuery","query"],"sourceRoot":""}