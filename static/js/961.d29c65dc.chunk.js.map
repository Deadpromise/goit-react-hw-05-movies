{"version":3,"file":"static/js/961.d29c65dc.chunk.js","mappings":"oKAyDA,UArDqB,WAAO,IAAD,IACzB,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAA0CR,EAAAA,EAAAA,UAAS,IAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAAsCV,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACxCC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OApBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAaH,GACVI,MAAK,SAAAC,GACJ,IAAMC,EAAM,yCAAqCD,EAAOE,aAClDC,EAAYH,EAAOI,aAAaC,MAAM,EAAG,GACzCC,EAA8B,GAAtBN,EAAOO,aACfC,EAASR,EAAOQ,OAAOC,KAAI,qBAAGC,IAAH,IAEjChC,EAAcsB,EAAOW,OACrB/B,EAAeqB,GACfnB,EAAeqB,GACfnB,EAAcsB,EAAMM,QAAQ,IAC5B1B,EAAiBc,EAAOa,UACxBzB,EAAeoB,EAAOM,KAAK,KAC5B,IACAC,OAAM,WACLC,QAAQC,IAAI,cACb,GACJ,GAAE,CAACtB,KAGF,4BACE,SAAC,KAAD,CAAMuB,GAAI3B,EAAS4B,QAAnB,sBACA,4BACE,gBAAKC,IAAKzC,EAAa0C,IAAG,UAAK5C,EAAL,WAA0B6C,MAAM,SAC1D,0BACG7C,EADH,KACiBI,EADjB,QAGA,wCAAgBE,EAAhB,QACA,sCACA,uBAAIE,KACJ,oCACA,uBAAIE,QAEN,SAAC,EAAAoC,SAAD,CAAUC,UAAU,wDAApB,UACE,SAAC,KAAD,QAIP,C,qHCrDKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,4FACY,sBADZ,SAGGC,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAJQ,sBAKbM,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,yBAaIA,EAASC,MAbb,gCAeHnB,QAAQC,IAAR,MAfG,gFAmBA,SAAenB,EAAtB,kC,aAAO,O,oBAAA,WAA4BsC,GAA5B,kFACCC,EADD,iBACsBD,GADtB,SAGGR,EAAS,CACbC,OAAQ,MACRC,IAAKL,EAAWY,EAChBN,OAAQ,CACNC,QAASN,IAPV,UAUoBO,EAAAA,EAAAA,GAAML,GAV1B,cAUGM,EAVH,OAWHlB,QAAQC,IAAIiB,EAASC,MAXlB,kBAaID,EAASC,MAbb,kCAeHnB,QAAQC,IAAR,MAfG,iF","sources":["pages/MovieDetails/MovieDetails.jsx","services/tmdb-api.js"],"sourcesContent":["import { Suspense, useRef, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../../services/tmdb-api';\n\nconst MovieDetails = () => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [moviePoster, setMoviePoster] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [movieScore, setMovieScore] = useState('');\n  const [movieOverview, setMovieOverview] = useState('');\n  const [movieGenres, setMovieGenres] = useState('');\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  //   console.log(backLink);\n  //   console.log(movieId);\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(result => {\n        const imgUrl = `https://image.tmdb.org/t/p/w500${result.poster_path}`;\n        const movieDate = result.release_date.slice(0, 4);\n        const score = result.vote_average * 10;\n        const genres = result.genres.map(({ name }) => name);\n\n        setMovieTitle(result.title);\n        setMoviePoster(imgUrl);\n        setReleaseDate(movieDate);\n        setMovieScore(score.toFixed(0));\n        setMovieOverview(result.overview);\n        setMovieGenres(genres.join(' '));\n      })\n      .catch(() => {\n        console.log('Fetch error');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink.current}>Go back</Link>\n      <div>\n        <img src={moviePoster} alt={`${movieTitle} poster`} width=\"300\"></img>\n        <h2>\n          {movieTitle} ({releaseDate})\n        </h2>\n        <p>User Score: {movieScore}%</p>\n        <h3>Overview</h3>\n        <p>{movieOverview}</p>\n        <h4>Genres</h4>\n        <p>{movieGenres}</p>\n      </div>\n      <Suspense fallback={<div>Loading additional info...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\nexport async function getTrendingMovie() {\n  const endpoint = '/trending/movie/day';\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const endpoint = `/movie/${id}`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\n// export default async function getImgs(inputData, page) {\n//   try {\n//     const config = {\n//       method: 'GET',\n//       url: BASE_URL,\n//       params: {\n//         key: API_KEY,\n//         q: inputData,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: 'true',\n//         page: page,\n//         per_page: 12,\n//       },\n//     };\n//     const response = await axios(config);\n//     // console.log(response.data);\n//     // console.log(response.data.totalHits);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n"],"names":["useState","movieTitle","setMovieTitle","moviePoster","setMoviePoster","releaseDate","setReleaseDate","movieScore","setMovieScore","movieOverview","setMovieOverview","movieGenres","setMovieGenres","location","useLocation","backLink","useRef","state","from","movieId","useParams","useEffect","getMovieById","then","result","imgUrl","poster_path","movieDate","release_date","slice","score","vote_average","genres","map","name","title","toFixed","overview","join","catch","console","log","to","current","src","alt","width","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovie","config","method","url","params","api_key","axios","response","data","id","endpoint"],"sourceRoot":""}