{"version":3,"file":"static/js/278.488d1894.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/tmdb-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieByQuery } from '../../services/tmdb-api';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [inputValue, setInputValue] = useState('');\n  //   const searchQuery = searchParams.get('query') ?? '';\n\n  const getInputData = e => {\n    const inputData = e.currentTarget.value;\n    setInputValue(inputData);\n    // setSearchParams({ query: inputData });\n  };\n  const onSearch = e => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n    const searchInfo = searchParams.get('query') ?? '';\n    // if (searchInfo.trim() === '') {\n    //   alert('Please, enter something.');\n    //   return;\n    // }\n    setSearchQuery(searchInfo);\n  };\n\n  useEffect(() => {\n    const searchInfo = searchParams.get('query') ?? '';\n    setSearchQuery(searchInfo);\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    getMovieByQuery(searchQuery)\n      .then(result => {\n        setResults(result.results);\n      })\n      .catch(() => {\n        console.log('Fetch error');\n      });\n    // console.log('log in eff', searchQuery);\n  }, [searchQuery]);\n  return (\n    <div>\n      <form onSubmit={onSearch}>\n        <input\n          type=\"text\"\n          onChange={getInputData}\n          autoFocus\n          placeholder=\"Search movies\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {results.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nMovies.propTypes = {\n  searchQuery: PropTypes.string,\n  results: PropTypes.arrayOf(PropTypes.shape({})),\n  searchParams: PropTypes.shape({}),\n  location: PropTypes.string,\n  inputValue: PropTypes.string,\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\nexport async function getTrendingMovie() {\n  const endpoint = '/trending/movie/day';\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const endpoint = `/movie/${id}`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  const endpoint = `/movie/${id}/credits`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const endpoint = `/movie/${id}/reviews`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const endpoint = `/search/movie`;\n  try {\n    const config = {\n      method: 'GET',\n      url: BASE_URL + endpoint,\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    };\n    const response = await axios(config);\n    // console.log(response.data);\n    // console.log(response.data.totalHits);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '909c04d45dd4c126cd2df97943bce308';\n\n// export default async function getImgs(inputData, page) {\n//   try {\n//     const config = {\n//       method: 'GET',\n//       url: BASE_URL,\n//       params: {\n//         key: API_KEY,\n//         q: inputData,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: 'true',\n//         page: page,\n//         per_page: 12,\n//       },\n//     };\n//     const response = await axios(config);\n//     // console.log(response.data);\n//     // console.log(response.data.totalHits);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n"],"names":["useState","searchQuery","setSearchQuery","results","setResults","useSearchParams","searchParams","setSearchParams","location","useLocation","inputValue","setInputValue","useEffect","searchInfo","get","getMovieByQuery","then","result","catch","console","log","onSubmit","e","preventDefault","query","type","onChange","inputData","currentTarget","value","autoFocus","placeholder","map","id","title","to","state","from","BASE_URL","API_KEY","getTrendingMovie","config","method","url","params","api_key","axios","response","data","getMovieById","endpoint","getMovieCredits","getMovieReviews"],"sourceRoot":""}